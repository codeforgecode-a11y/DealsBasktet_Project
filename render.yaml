# Render.com deployment configuration for DealsBasket
# Configured to use external AWS RDS PostgreSQL database
services:
  # Web service
  - type: web
    name: dealsbasket-web
    env: python
    plan: starter  # Change to 'standard' or 'pro' for production
    buildCommand: "./build.sh"
    startCommand: "gunicorn --config gunicorn.conf.py server.wsgi:application"
    healthCheckPath: "/health/"
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DJANGO_SETTINGS_MODULE
        value: server.settings.production
      - key: DEBUG
        value: false
      - key: SECRET_KEY
        generateValue: true
      - key: ALLOWED_HOSTS
        value: ".onrender.com,localhost,127.0.0.1"
      - key: ENVIRONMENT
        value: production
      - key: DJANGO_SUPERUSER_USERNAME
        value: admin
      - key: DJANGO_SUPERUSER_EMAIL
        value: admin@dealsbasket.com
      - key: DJANGO_SUPERUSER_PASSWORD

        generateValue: true
      # Cloudinary configuration (optional)
      - key: CLOUDINARY_CLOUD_NAME
        value: "dq7zkxtnj"  # Set your Cloudinary cloud name
      - key: CLOUDINARY_API_KEY
        value: "227928539487962"  # Set your Cloudinary API key
      - key: CLOUDINARY_API_SECRET
        value: "wlHSgdQX7w7nzUVnR49Z1mKkWBI"  # Set your Cloudinary API secret
      # Email configuration (optional)
      - key: EMAIL_HOST
        value: smtp-relay.brevo.com
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: true
      - key: EMAIL_HOST_USER
        value: "923d7c001@smtp-brevo.com"  # Set your email username
      - key: EMAIL_HOST_PASSWORD
        value: "ODZYXTvEVr4hjCSG"  # Set your email password
      - key: DEFAULT_FROM_EMAIL
        value: codeforge.code@gmail.com
      # CORS configuration
      - key: CORS_ALLOWED_ORIGINS
        value: "https://your-frontend-domain.com"
      # JWT configuration
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: JWT_ACCESS_TOKEN_LIFETIME_MINUTES
        value: 60
      - key: JWT_REFRESH_TOKEN_LIFETIME_DAYS
        value: 7
      - key: JWT_ALLOW_REFRESH
        value: true
      # Security configuration
      - key: SECURE_SSL_REDIRECT
        value: true
      - key: SESSION_COOKIE_SECURE
        value: true
      - key: CSRF_COOKIE_SECURE
        value: true
      - key: SECURE_HSTS_SECONDS
        value: 31536000
      - key: SECURE_HSTS_INCLUDE_SUBDOMAINS
        value: true
      - key: SECURE_HSTS_PRELOAD
        value: true
      # Storage configuration
      - key: STATICFILES_STORAGE
        value: whitenoise.storage.CompressedManifestStaticFilesStorage
      - key: DEFAULT_FILE_STORAGE
        value: server.storage_backends.CloudinaryOnlyStorage
      - key: USE_CLOUDINARY_FOR_MEDIA
        value: true
      # API configuration
      - key: API_VERSION
        value: v1
      - key: RATELIMIT_ENABLE
        value: true
      - key: RATELIMIT_USE_CACHE
        value: default
      # Frontend URL
      - key: FRONTEND_URL
        value: "https://your-frontend-domain.com"
      # AWS RDS PostgreSQL Database Configuration
      - key: DB_ENGINE
        value: "django.db.backends.postgresql"
      - key: DB_NAME
        value: "dealsbasket"
      - key: DB_USER
        value: "durgesh"
      - key: DB_PASSWORD
        value: "DUrg7080"
      - key: DB_HOST
        value: "dealsbasket.chi4u4q4kiid.ap-south-1.rds.amazonaws.com"
      - key: DB_PORT
        value: "5432"
      # Database SSL Configuration for AWS RDS
      - key: DB_SSLMODE
        value: "prefer"
      # Alternative: Use DATABASE_URL format (comment out individual DB settings above if using this)
      # - key: DATABASE_URL
      #   value: "postgresql://durgesh:DUrg7080@dealsbasket.chi4u4q4kiid.ap-south-1.rds.amazonaws.com:5432/dealsbasket?sslmode=prefer"

# Database service - DISABLED (Using external AWS RDS PostgreSQL)
# databases:
#   - name: dealsbasket-db
#     databaseName: dealsbasket
#     user: dealsbasket_user
#     plan: starter  # Change to 'standard' or 'pro' for production

# Redis service (optional for caching)
# Uncomment if you want to use Redis for caching
# - type: redis
#   name: dealsbasket-redis
#   plan: starter
#   maxmemoryPolicy: allkeys-lru

# =============================================================================
# AWS RDS PostgreSQL Configuration Notes
# =============================================================================
# This configuration uses an external AWS RDS PostgreSQL database instead of
# Render's managed PostgreSQL service. The database connection details are
# configured via environment variables in the web service section above.
#
# Database Details:
# - Host: dealsbasket.chi4u4q4kiid.ap-south-1.rds.amazonaws.com
# - Database: dealsbasket
# - User: durgesh
# - Port: 5432
# - Region: ap-south-1 (Asia Pacific - Mumbai)
#
# Security Considerations:
# - Ensure RDS security group allows connections from Render IP ranges
# - Use strong passwords and consider rotating them regularly
# - Enable SSL/TLS encryption for database connections
# - Monitor database access logs
#
# Alternative Configuration:
# You can use DATABASE_URL instead of individual DB settings by uncommenting
# the DATABASE_URL environment variable above and commenting out the individual
# DB_* variables.
# =============================================================================
